@model Web_Project.Models.Contact

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<head>
    <link href="~/Theme/css/Text_Area.css" rel="stylesheet" />
</head>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content-wrapper">
        <section class="content" style="padding-top:30px">
            <!-- Default box -->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-6 text-end text-danger text-uppercase">
                            Thêm mới liên hệ
                        </div>
                        <div class="col-6 text-right">
                            <a href="@Url.Action("Index","Contact")" class="btn btn-sm btn-success"> <i class="fas fa-long-arrow-alt-left"></i> Back</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.request_date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="datetime-local" id="request_date" name="request_date" class="form-control" />
                            @Html.ValidationMessageFor(model => model.request_date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group same-height">
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Lấy ngày và giờ hiện tại
        var currentDate = new Date();

        // Chuyển định dạng ngày và giờ
        var formattedDateTime = currentDate.toISOString().slice(0, 16);

        // Gán giá trị cho trường ngày và giờ
        $('#request_date').val(formattedDateTime);
    });
</script>

